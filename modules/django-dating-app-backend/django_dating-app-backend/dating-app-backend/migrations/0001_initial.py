# Generated by Django 2.2.26 on 2022-08-18 18:54

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Interest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Name of Interest')),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('caption', models.CharField(max_length=256)),
                ('description', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='post_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Name of Skill')),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_image', models.ImageField(blank=True, null=True, upload_to='profile_photos', verbose_name='Profile Photo')),
                ('cover_image', models.ImageField(blank=True, null=True, upload_to='cover_photos', verbose_name='Cover Photo')),
                ('bio', models.TextField(blank=True, null=True, verbose_name='Bio')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='Birth Date')),
                ('country', models.CharField(blank=True, max_length=255, null=True, verbose_name='Country')),
                ('city', models.CharField(blank=True, max_length=255, null=True, verbose_name='City')),
                ('phone_number', models.CharField(blank=True, max_length=255, null=True, verbose_name='Phone Number')),
                ('gender', models.CharField(blank=True, max_length=128, null=True)),
                ('age', models.IntegerField(blank=True, null=True)),
                ('interests', models.ManyToManyField(blank=True, related_name='user_interests', to='dating-app-backend.Interest')),
                ('skills', models.ManyToManyField(blank=True, related_name='user_skills', to='dating-app-backend.Skill')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile_info', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UpvotePost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='upvotepost_post', to='dating-app-backend.Post')),
                ('upvote_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='upvotepost_upvote_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ReportPost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reportpost_post', to='dating-app-backend.Post')),
                ('reported_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reportpost_reported_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProfileConfig',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('show_me_on_search', models.BooleanField(default=True, verbose_name='Show me on search')),
                ('show_profile_image', models.BooleanField(default=True, verbose_name='Show Profile Image')),
                ('show_cover_image', models.BooleanField(default=True, verbose_name='Show Cover Image')),
                ('show_country', models.BooleanField(default=True, verbose_name='Show Country')),
                ('show_city', models.BooleanField(default=True, verbose_name='Show City')),
                ('show_phone_number', models.BooleanField(default=True, verbose_name='Show Phone Number')),
                ('show_interests', models.BooleanField(default=True, verbose_name='Show Interests')),
                ('show_skills', models.BooleanField(default=True, verbose_name='Show Skills')),
                ('radius_of_interest', models.IntegerField(default=100, help_text='The radius of interest in kilometers', verbose_name='Radius of Interest')),
                ('interest_gender', models.CharField(blank=True, choices=[('male', 'Male'), ('female', 'Female'), ('both', 'both')], max_length=128, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile_configs', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PostMedia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, upload_to='post_media')),
                ('video', models.FileField(blank=True, upload_to='post_media')),
                ('background', models.CharField(blank=True, max_length=256, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='postmedia_post', to='dating-app-backend.Post')),
            ],
        ),
        migrations.CreateModel(
            name='PostComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('comment', models.CharField(max_length=512)),
                ('image', models.ImageField(blank=True, upload_to='post_media')),
                ('post', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='postcomment_post', to='dating-app-backend.Post')),
                ('ref_comment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='postcomment_ref_comment', to='dating-app-backend.PostComment')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='postcomment_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MatchRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_accepted', models.BooleanField(default=False, verbose_name='Is Accepted')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('match_request_for', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='match_requested_for_user', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='match_request_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MatchDenied',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('match_denied_with', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='match_denied_with_user', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='match_denied_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('match_with', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='match_with_user', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='match_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='likeProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('liked_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='liked_by_user', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='liked_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='LikeComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likecomment_comment', to='dating-app-backend.PostComment')),
                ('liked_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likecomment_liked_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DownvotePost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('downvote_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='downvotepost_downvote_by', to=settings.AUTH_USER_MODEL)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='downvotepost_post', to='dating-app-backend.Post')),
            ],
        ),
    ]
