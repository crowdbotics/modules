version: 2.1
jobs:
  node:
    working_directory: ~/build
    docker:
      - image: cimg/python:3.8.13-node
    steps:
      - checkout
      - restore_cache:
          key: yarn-v1-{{ checksum "yarn.lock" }}-{{ arch }}
      - restore_cache:
          key: node-v1-{{ checksum "package.json" }}-{{ arch }}
      - run: yarn install
      - run:
          name: Install Pipenv dependencies
          command: python --version && pipenv install
      - save_cache:
          key: yarn-v1-{{ checksum "yarn.lock" }}-{{ arch }}
          paths:
            - ~/.cache/yarn
      - save_cache:
          key: node-v1-{{ checksum "package.json" }}-{{ arch }}
          paths:
            - node_modules
      - run:
          name: Create demo directory
          command: pwd && mkdir -p ~/build/demo
      - run:
          name: Create Demo App
          command: yarn run demo
      - persist_to_workspace:
          root: ~/build
          paths:
            - "demo"

  ios:
    macos:
      xcode: "14.1.0"
    resource_class: macos.x86.medium.gen2
    working_directory: ~/build/demo

    # use a --login shell so our "set Ruby version" command gets picked up for later steps
    shell: /bin/bash --login -o pipefail

    steps:
      - attach_workspace:
          at: ~/build/demo

      - restore_cache:
          key: yarn-v1-{{ checksum "yarn.lock" }}-{{ arch }}

      - restore_cache:
          key: node-v1-{{ checksum "package.json" }}-{{ arch }}

      # not using a workspace here as Node and Yarn versions
      # differ between our macOS executor image and the Docker containers above
      - run: yarn install

      - save_cache:
          key: yarn-v1-{{ checksum "yarn.lock" }}-{{ arch }}
          paths:
            - ~/.cache/yarn

      - save_cache:
          key: node-v1-{{ checksum "package.json" }}-{{ arch }}
          paths:
            - node_modules

      - restore_cache:
          keys:
            - &gem-cache gem-cache-v1-{{ arch }}-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
            - gem-cache-v1-{{ arch }}-{{ .Branch }}
            - gem-cache-v1

      - run:
          name: Run bundle config and install
          command: |
            bundle lock --add-platform ruby
            bundle config set --local deployment 'true'
            bundle install

      - save_cache:
          key: *gem-cache
          paths:
            - vendor/bundle

      - restore_cache:
          key: 1-pods-{{ checksum "ios/Podfile.lock" }}
          paths:
            - ios/Pods

      - run:
          name: Install MacOS ffi
          command: gem inst ffi -v '1.15.1' -- --disable-system-libffi
          working_directory: ios

      - run:
          name: Update CocaPods dependencies
          command: bundle exec pod install --verbose
          working_directory: ios
          timeout: 1200

      - save_cache:
          key: 1-pods-{{ checksum "ios/Podfile.lock" }}
          paths:
            - ios/Pods

      - run:
          name: Populate EnvFile
          command: env >> .env

      - run:
          name: Build iOS App
          command: bundle exec fastlane create_build
          working_directory: ios

  android:
    working_directory: ~/build/demo
    docker:
      - image: reactnativecommunity/react-native-android:6.2
    resource_class: "medium+"
    environment:
      - TERM: "dumb"
      - ADB_INSTALL_TIMEOUT: 10
      - _JAVA_OPTIONS: "-XX:+UnlockExperimentalVMOptions -XX:+UseContainerSupport"
      - GRADLE_OPTS: '-Dorg.gradle.daemon=false -Dorg.gradle.jvmargs="-XX:+HeapDumpOnOutOfMemoryError"'
      - BUILD_THREADS: 2
    steps:
      - attach_workspace:
          at: ~/build/demo

      - restore_cache:
          key: bundle-v1-{{ checksum "Gemfile.lock" }}-{{ arch }}

      - run:
          command: bundle install

      - save_cache:
          key: bundle-v1-{{ checksum "Gemfile.lock" }}-{{ arch }}
          paths:
            - vendor/bundle

      - run:
          name: Populate EnvFile
          command: env >> .env

      - run:
          name: Create Android App Build (aab)
          command: bundle exec fastlane build_aab
          working_directory: android

workflows:
  version: 2.1
  build-validation:
    jobs:
      - node
      - ios:
          requires:
            - node
      - android:
          requires:
            - node
