name: Release

on:
  push:
    branches:
      - 'master'
      - 'develop'

jobs:
  set_environment:
    outputs:
      my_env: ${{ steps.setenv.outputs.my_env }}
    runs-on: ubuntu-latest
    steps:
    - id: setenv
      run: |
        if [ $GITHUB_REF_NAME == develop ]; then
        echo "my_env=staging" >> $GITHUB_OUTPUT
        fi
        if [ $GITHUB_REF_NAME == master ]; then
        echo "my_env=production" >> $GITHUB_OUTPUT
        fi

  release:
    runs-on: ubuntu-latest
    needs: set_environment
    environment: 
      name: ${{ needs.set_environment.outputs.my_env }}
    name: ${{ needs.set_environment.outputs.my_env }}-release
    steps:
      - name: Generate Heroku Config
        run: |
          cat <<EOF > ~/.netrc 
          machine api.heroku.com
            login ${{ secrets.HEROKU_EMAIL }}
            password ${{ secrets.HEROKU_API_TOKEN }}
          machine git.heroku.com
            login  ${{ secrets.HEROKU_EMAIL }}
            password ${{ secrets.HEROKU_API_TOKEN }}
          EOF
      - name: release modules
        run: |
          heroku run 'python manage.py update_crowdbotics_modules' -a ${{ secrets.HEROKU_APP }}